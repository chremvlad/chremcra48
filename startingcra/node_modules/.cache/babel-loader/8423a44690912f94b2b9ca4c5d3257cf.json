{"ast":null,"code":"var _jsxFileName = \"C:\\\\cralifepro\\\\startingcra\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //import ExpenseItem from \"./ExpenseItem\";\n\nimport ExpensesFilter from \"./ExpensesFilter\";\nimpo;\nimport Card from \"../UI/Card\";\nimport \"../styles/Expenses.css\"; //map(m=>m*2): transforms each element of the original array using a function parameter.\n//const transArray = originalArray.map(function_parameter)\n//note: props received from parent is an array_object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const FilterYearChangedHandler = selectedYearOption => {\n    setFilteredYear(selectedYearOption);\n  }; //storing filtered props_items_expenses by year to a constant\n\n\n  const filteredExpenses = props.items.filter(outLays => {\n    return outLays.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selectedYear: filteredYear,\n        onFilterChanged: FilterYearChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), expenseFilterContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/cralifepro/startingcra/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpensesFilter","impo","Card","Expenses","props","filteredYear","setFilteredYear","FilterYearChangedHandler","selectedYearOption","filteredExpenses","items","filter","outLays","date","getFullYear","toString","expenseFilterContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACAC,IAAI;AACJ,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,wBAAP,C,CAEA;AACA;AAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,wBAAwB,GAAIC,kBAAD,IAAwB;AACvDF,IAAAA,eAAe,CAACE,kBAAD,CAAf;AACD,GAFD,CAH0B,CAM1B;;;AACA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFwB,CAAzB;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,YAAY,EAAEA,YADhB;AAEE,QAAA,eAAe,EAAEE;AAFnB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGS,oBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAtBD;;GAAMb,Q;;KAAAA,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n//import ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimpo\r\nimport Card from \"../UI/Card\";\r\n\r\nimport \"../styles/Expenses.css\";\r\n\r\n//map(m=>m*2): transforms each element of the original array using a function parameter.\r\n//const transArray = originalArray.map(function_parameter)\r\n\r\n//note: props received from parent is an array_object\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const FilterYearChangedHandler = (selectedYearOption) => {\r\n    setFilteredYear(selectedYearOption);\r\n  };\r\n  //storing filtered props_items_expenses by year to a constant\r\n  const filteredExpenses = props.items.filter((outLays) => {\r\n    return outLays.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedYear={filteredYear}\r\n          onFilterChanged={FilterYearChangedHandler}\r\n        />\r\n        {expenseFilterContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}