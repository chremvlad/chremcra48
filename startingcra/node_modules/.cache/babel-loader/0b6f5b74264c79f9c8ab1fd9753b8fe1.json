{"ast":null,"code":"var _jsxFileName = \"C:\\\\cralifepro\\\\startingcra\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //importing relatives files_components from the compnent folder annd attributive...\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport UpComingExpense from \"./components/UpComingExpense/UpComingExpense\"; //object1: create data source and object properties\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst outlay = [{\n  id: \"i0\",\n  date: new Date(2021, 8, 8),\n  title: \"Car Insurance\",\n  amount: 294.67\n}, {\n  id: \"i1\",\n  date: new Date(2021, 8, 8),\n  title: \"School\",\n  amount: 250.67\n}, {\n  id: \"i2\",\n  date: new Date(2021, 8, 9),\n  title: \"Gazoline\",\n  amount: 344.0\n}, {\n  id: \"i3\",\n  date: new Date(2021, 8, 10),\n  title: \"Rent\",\n  amount: 1800.0\n}]; //parent props source is an array\n\nconst App = () => {\n  _s();\n\n  //methods zone Above return_area\n  const [outlays, setOutlays] = useState(outlay); //object2: create method and object properties\n  //Receive lifting_data from child_UpcomingExpense\n\n  const NewExpenseHandler = storeliftData => {\n    // const newExpenseData = {\n    // ...storeliftData,\n    // id: Math.random().toString()\n    //Test storing new expenses data - lifting\n    // console.log(storeliftData); //result data is arriving to parent.\n    // };\n    //console.log(newExpenseData)//result data is arriving to parent.\n    setOutlays(prevExpenses => {\n      return [storeliftData, ...prevExpenses];\n    });\n  }; //First step create  parent props_function\n\n\n  return (\n    /*#__PURE__*/\n\n    /*all data properties are called props*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(UpComingExpense, {\n        onNewExpense: NewExpenseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n        items: outlays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(App, \"5WK+KLCWsx1I+BPT0P6O/ajGS+w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/cralifepro/startingcra/src/App.js"],"names":["React","useState","Expenses","UpComingExpense","outlay","id","date","Date","title","amount","App","outlays","setOutlays","NewExpenseHandler","storeliftData","prevExpenses"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,eAAP,MAA4B,8CAA5B,C,CAEC;;;AACA,MAAMC,MAAM,GAAG,CACd;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CADc,EAOd;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEC,EAAAA,KAAK,EAAE,QAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAPc,EAad;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFR;AAGEC,EAAAA,KAAK,EAAE,UAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAbc,EAmBd;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAFR;AAGEC,EAAAA,KAAK,EAAE,MAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAnBc,CAAf,C,CA2BD;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBX,QAAQ,CAACG,MAAD,CAArC,CAFgB,CAKhB;AACA;;AACA,QAAMS,iBAAiB,GAAIC,aAAD,IAAmB;AAC3C;AACA;AACA;AACA;AACD;AACC;AACA;AACAF,IAAAA,UAAU,CAAEG,YAAD,IAAgB;AACzB,aAAO,CAACD,aAAD,EAAgB,GAAGC,YAAnB,CAAP;AACD,KAFS,CAAV;AAGD,GAXD,CAPgB,CAoBhB;;;AACA;AAAA;;AACE;AACA;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,YAAY,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAQD,CA7BD;;GAAMD,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React,{useState} from \"react\";\n//importing relatives files_components from the compnent folder annd attributive...\nimport Expenses from \"./components/Expenses/Expenses\";\nimport UpComingExpense from \"./components/UpComingExpense/UpComingExpense\";\n\n //object1: create data source and object properties\n const outlay = [\n  {\n    id: \"i0\",\n    date: new Date(2021, 8, 8),\n    title: \"Car Insurance\",\n    amount: 294.67,\n  },\n  {\n    id: \"i1\",\n    date: new Date(2021, 8, 8),\n    title: \"School\",\n    amount: 250.67,\n  },\n  {\n    id: \"i2\",\n    date: new Date(2021, 8, 9),\n    title: \"Gazoline\",\n    amount: 344.0,\n  },\n  {\n    id: \"i3\",\n    date: new Date(2021, 8, 10),\n    title: \"Rent\",\n    amount: 1800.0,\n  },\n];\n\n//parent props source is an array\nconst App = () => {\n  //methods zone Above return_area\n  const [outlays, setOutlays]= useState(outlay);\n \n\n  //object2: create method and object properties\n  //Receive lifting_data from child_UpcomingExpense\n  const NewExpenseHandler = (storeliftData) => {\n    // const newExpenseData = {\n    // ...storeliftData,\n    // id: Math.random().toString()\n    //Test storing new expenses data - lifting\n   // console.log(storeliftData); //result data is arriving to parent.\n    // };\n    //console.log(newExpenseData)//result data is arriving to parent.\n    setOutlays((prevExpenses)=>{\n      return [storeliftData, ...prevExpenses]\n    });\n  };\n\n  //First step create  parent props_function\n  return (\n    /*all data properties are called props*/\n    <div>\n      <UpComingExpense onNewExpense={NewExpenseHandler} />\n      {/* props for array-items */}\n      <Expenses items={outlays} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}