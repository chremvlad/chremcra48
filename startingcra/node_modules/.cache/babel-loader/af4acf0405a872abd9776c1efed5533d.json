{"ast":null,"code":"var _jsxFileName = \"C:\\\\cralifepro\\\\startingcra\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\"; //import Card from \"../UI/Card\";\n\nimport \"../styles/Expenses.css\"; //map(m=>m*2): transforms each element of the original array using a function parameter.\n//const transArray = originalArray.map(function_parameter)\n//note: props receive from parent is an array_object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const FilterYearChangedHandler = selectedYearOption => {\n    setFilteredYear(selectedYearOption);\n  }; //storing filtered props_items_expenses by year to a constant\n\n\n  const filteredExpenses = props.items.filter(outLays => {\n    return outLays.date.getFullYear().toString() === filteredYear;\n  });\n  return (\n    /*#__PURE__*/\n    // <Card className=\"expenses\">\n    _jsxDEV(\"div\", {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selectedYear: filteredYear,\n        onFilterChanged: FilterYearChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this) : filteredExpenses.map(outlays => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: outlays.title,\n        amount: outlays.amount,\n        date: outlays.date\n      }, outlays.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), \" ;\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this) //</Card>\n\n  );\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/cralifepro/startingcra/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","FilterYearChangedHandler","selectedYearOption","filteredExpenses","items","filter","outLays","date","getFullYear","toString","length","map","outlays","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AAEA,OAAO,wBAAP,C,CAEA;AACA;AAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMO,wBAAwB,GAAIC,kBAAD,IAAwB;AACvDF,IAAAA,eAAe,CAACE,kBAAD,CAAf;AACD,GAFD,CAH0B,CAO1B;;;AACA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFwB,CAAzB;AAIA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,YAAY,EAAEA,YADhB;AAEE,QAAA,eAAe,EAAEE;AAFnB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGE,gBAAgB,CAACO,MAAjB,KAA4B,CAA5B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAGCP,gBAAgB,CAACQ,GAAjB,CAAsBC,OAAD,iBACnB,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,QAAA,MAAM,EAAED,OAAO,CAACE,MAHlB;AAIE,QAAA,IAAI,EAAEF,OAAO,CAACL;AAJhB,SACOK,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,cADF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAoBE;;AApBF;AAsBD,CAlCD;;GAAMlB,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n//import Card from \"../UI/Card\";\r\n\r\nimport \"../styles/Expenses.css\";\r\n\r\n//map(m=>m*2): transforms each element of the original array using a function parameter.\r\n//const transArray = originalArray.map(function_parameter)\r\n\r\n//note: props receive from parent is an array_object\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const FilterYearChangedHandler = (selectedYearOption) => {\r\n    setFilteredYear(selectedYearOption);\r\n  };\r\n\r\n  //storing filtered props_items_expenses by year to a constant\r\n  const filteredExpenses = props.items.filter((outLays) => {\r\n    return outLays.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    // <Card className=\"expenses\">\r\n    <div className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={filteredYear}\r\n        onFilterChanged={FilterYearChangedHandler}\r\n      />\r\n      {filteredExpenses.length === 0 ? (\r\n        <p>No expenses found</p>\r\n      ) : (\r\n        filteredExpenses.map((outlays) => (\r\n          <ExpenseItem\r\n            key={outlays.id}\r\n            title={outlays.title}\r\n            amount={outlays.amount}\r\n            date={outlays.date}\r\n          />\r\n        ))\r\n      )} ;\r\n    </div>\r\n    //</Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}