{"ast":null,"code":"var _jsxFileName = \"C:\\\\cralifepro\\\\startingcra\\\\src\\\\components\\\\UpComingExpense\\\\UpcomingDataForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles/UpcomingDataForm.css\"; //ExpenseForm\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpcomingDataForm = props => {\n  _s();\n\n  //option1: save state data changed\n  const [inputTitle, setInputTitle] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [inputDate, setInputDate] = useState(\"\");\n\n  const titleChangeHandler = event => {\n    return setInputTitle(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    //console.log('Test in amountHandler')\n    return setInputAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    //console.log('Test in dateHandler')\n    return setInputDate(event.target.value);\n  }; //Storing input entered data by create a method for submit_form_listener\n\n\n  const submitHandler = event => {\n    event.preventDefault(); //storing entered data\n\n    const expenseLiftData = {\n      title: inputTitle,\n      amount: inputAmount,\n      date: new Date(inputDate)\n    };\n    console.log(expenseliftData);\n    setInputAmount(\"\");\n    setInputDate(\"\");\n    setInputTitle(\"\");\n  }; // add two way value_binding to props\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler,\n          value: inputTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputAmount,\n          onChange: amountChangeHandler,\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: inputDate,\n          onChange: dateChangeHandler,\n          min: \"2021-01-01\",\n          max: \"2022-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpcomingDataForm, \"4LmkJmexKrCThc/RRYqNd1xo4YY=\");\n\n_c = UpcomingDataForm;\nexport default UpcomingDataForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcomingDataForm\");","map":{"version":3,"sources":["C:/cralifepro/startingcra/src/components/UpComingExpense/UpcomingDataForm.js"],"names":["React","useState","UpcomingDataForm","props","inputTitle","setInputTitle","inputAmount","setInputAmount","inputDate","setInputDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseLiftData","title","amount","date","Date","console","log","expenseliftData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./styles/UpcomingDataForm.css\";\r\n\r\n//ExpenseForm\r\nconst UpcomingDataForm = (props) => {\r\n  //option1: save state data changed\r\n  const [inputTitle, setInputTitle] = useState(\"\");\r\n  const [inputAmount, setInputAmount] = useState(\"\");\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    return setInputTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    //console.log('Test in amountHandler')\r\n    return setInputAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    //console.log('Test in dateHandler')\r\n    return setInputDate(event.target.value);\r\n  };\r\n\r\n  //Storing input entered data by create a method for submit_form_listener\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    //storing entered data\r\n    const expenseLiftData = {\r\n      title: inputTitle,\r\n      amount: inputAmount,\r\n      date: new Date(inputDate),\r\n    };\r\n\r\n\r\n    console.log(expenseliftData);\r\n\r\n\r\n    setInputAmount(\"\");\r\n    setInputDate(\"\");\r\n    setInputTitle(\"\");\r\n  };\r\n  // add two way value_binding to props\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label> Title:</label>\r\n\r\n          <input type=\"text\" onChange={titleChangeHandler} value={inputTitle} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label> Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={inputAmount}\r\n            onChange={amountChangeHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label> Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={inputDate}\r\n            onChange={dateChangeHandler}\r\n            min=\"2021-01-01\"\r\n            max=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\"> Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UpcomingDataForm;\r\n"]},"metadata":{},"sourceType":"module"}